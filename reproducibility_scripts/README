The following shell scripts can be used to reproduce the results appearing in the submitted paper:

Penas, D.R., P. Gonzalez, J.A. Egea, R. Doallo and J.R. Banga (2016) Parameter estimation in large-scale systems biology models: a parallel and self-adaptive cooperative strategy. Submitted, under review.

For each folder, we can observe for a specific BioPreDyn problem the next scripts:

B1_ESS_10_MPI.sh --> B1 problem with 10 MPI processors with eSSm algorithm.
B1_ESS_20_MPI.sh --> B1 problem with 20 MPI processors with eSSm algorithm.
B1_ESS_40_MPI.sh --> B1 problem with 40 MPI processors with eSSm algorithm.
B1_CESS_10_MPI_TIME_700.sh  --> B1 problem with 10 MPI processors (+1 master processor) with CeSS algorithm. Migration time = 700 seconds.
B1_CESS_10_MPI_TIME_1400.sh --> B1 problem with 10 MPI processors (+1 master processor) with CeSS algorithm. Migration time = 1400 seconds.
B1_SACESS_10_MPI.sh --> B1 problem with 10 MPI processors (+1 master processor) with saCeSS algorithm.
B1_SACESS_20_MPI.sh --> B1 problem with 20 MPI processors (+1 master processor) with saCeSS algorithm.
B1_SACESS_40_MPI.sh --> B1 problem with 40 MPI processors (+1 master processor) with saCeSS algorithm.
B1_SACESS_5_MPI_2_OMP.sh --> B1 problem with 5 MPI processors (+1 master processor) and 2 openMP threads per processors with saCeSS algorithm.
B1_SACESS_5_MPI_4_OMP.sh --> B1 problem with 5 MPI processors (+1 master processor) and 4 openMP threads per processors with saCeSS algorithm.
B1_SACESS_5_MPI_8_OMP.sh --> B1 problem with 5 MPI processors (+1 master processor) and 8 openMP threads per processors with saCeSS algorithm.
B1_SACESS_10_MPI_2_OMP.sh --> B1 problem with 10 MPI processors (+1 master processor) and 2 openMP threads per processors with saCeSS algorithm.
B1_SACESS_10_MPI_4_OMP.sh --> B1 problem with 10 MPI processors (+1 master processor) and 4 openMP threads per processors with saCeSS algorithm.
B1_SACESS_20_MPI_2_OMP.sh --> B1 problem with 20 MPI processors (+1 master processor) and 2 openMP threads per processors with saCeSS algorithm.

EXAMPLE_QSUB.sh --> In this file, there are a example of qsub commands to send the previous scripts in a SGE system. 

